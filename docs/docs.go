// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-02-14 09:24:50.195795 -0800 PST m=+2.327965620

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "Shows the local node's peer ID\nShows the local node's wallet address\nPings another peer on the network, returning online|offline.",
        "title": "Textile Node API",
        "termsOfService": "https://github.com/textileio/textile-go/blob/master/TERMS",
        "contact": {
            "name": "Textile",
            "url": "https://textile.io/",
            "email": "contact@textile.io"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/textileio/textile-go/blob/master/LICENSE"
        },
        "version": "0.0"
    },
    "host": "127.0.0.1:40600",
    "basePath": "/api/v0",
    "paths": {
        "/address": {
            "get": {
                "description": "Shows the local node's wallet address",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "peer"
                ],
                "summary": "Show peer address",
                "responses": {
                    "200": {
                        "description": "address",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mills/blob": {
            "post": {
                "description": "Takes a binary data blob, and optionally encrypts it, before adding to IPFS,\nand returns a file object",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mills"
                ],
                "summary": "Process raw data blobs",
                "parameters": [
                    {
                        "type": "file",
                        "description": "multipart/form-data file",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "plaintext=false,use=\"\"",
                        "description": "plaintext: whether to leave unencrypted)use: if empty, assumes body contains multipart form file data, otherwise, will attempt to fetch given CID from IPFS",
                        "name": "X-Textile-Opts",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "file",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/repo.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mills/image/exif": {
            "post": {
                "description": "Takes an input image, and extracts its EXIF data (optionally encrypting output),\nbefore adding to IPFS, and returns a file object",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mills"
                ],
                "summary": "Extract EXIF data from image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "multipart/form-data file",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "plaintext=false,use=\"\"",
                        "description": "plaintext: whether to leave unencrypted, use: if empty, assumes body contains multipart form file data, otherwise, will attempt to fetch given CID from IPFS",
                        "name": "X-Textile-Opts",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "file",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/repo.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mills/image/resize": {
            "post": {
                "description": "Takes an input image, and resizes/resamples it (optionally encrypting output),\nbefore adding to IPFS, and returns a file object",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mills"
                ],
                "summary": "Resize an image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "multipart/form-data file",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "plaintext=false,use=\"\",quality=75,width=100",
                        "description": "plaintext: whether to leave unencrypted, use: if empty, assumes body contains multipart form file data, otherwise, will attempt to fetch given CID from IPFS, width: the requested image width (required), quality: the requested JPEG image quality",
                        "name": "X-Textile-Opts",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "file",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/repo.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mills/schema": {
            "post": {
                "description": "Takes a JSON-based Schema, validates it, adds it to IPFS, and returns a file object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mills"
                ],
                "summary": "Validate, add, and pin a new Schema",
                "parameters": [
                    {
                        "description": "schema",
                        "name": "schema",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/schema.Node"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "file",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/repo.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/peer": {
            "get": {
                "description": "Shows the local node's peer ID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "peer"
                ],
                "summary": "Show peer ID",
                "responses": {
                    "200": {
                        "description": "peerid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Pings another peer on the network, returning online|offline.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "peer"
                ],
                "summary": "Ping a network peer",
                "parameters": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "name search by q",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "peerid",
                        "name": "X-Textile-Args",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "One of online|offline",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Gets the local node's public profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get public profile",
                "responses": {
                    "200": {
                        "description": "Contact info",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/repo.Contact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/avatar": {
            "post": {
                "description": "Sets public profile avatar by specifying an existing image file hash",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Set avatar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash",
                        "name": "X-Textile-Args",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/username": {
            "post": {
                "description": "Sets public profile username to given string",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Set username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "X-Textile-Args",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/threads": {
            "get": {
                "description": "Lists all local threads, returning an array of ThreadInfo objects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Lists info on all threads",
                "responses": {
                    "201": {
                        "description": "threads",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/core.ThreadInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new Thread with given name, type, and sharing and members options, returning\na ThreadInfo object",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Adds and joins a new thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "X-Textile-Args",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "type=private,sharing=not_shared,members=",
                        "description": "key: A locally unique key used by an app to identify this thread on recovery, schema: Existing Thread Schema IPFS CID, type: Set the thread type to one of 'private', 'read_only', 'public', or 'open', sharing: Set the thread sharing style to one of 'not_shared','invite_only', or 'shared', members: An array of contact addresses. When supplied, the thread will not allow additional peers beyond those in array, useful for 1-1 chat/file sharing",
                        "name": "X-Textile-Opts",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "thread",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ThreadInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.BlockInfo": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target": {
                    "type": "string"
                },
                "thread_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "core.ThreadInfo": {
            "type": "object",
            "properties": {
                "block_cnt": {
                    "type": "integer"
                },
                "file_cnt": {
                    "type": "integer"
                },
                "head": {
                    "type": "object",
                    "$ref": "#/definitions/core.BlockInfo"
                },
                "id": {
                    "type": "string"
                },
                "initiator": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "peer_cnt": {
                    "type": "integer"
                },
                "schema": {
                    "type": "object",
                    "$ref": "#/definitions/schema.Node"
                },
                "schema_id": {
                    "type": "string"
                },
                "sharing": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "repo.Cafe": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "api": {
                    "type": "string"
                },
                "node": {
                    "type": "string"
                },
                "peer": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "swarm": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "repo.Contact": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inboxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repo.Cafe"
                    }
                },
                "updated": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "repo.File": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "checksum": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "media": {
                    "type": "string"
                },
                "meta": {
                    "type": "object"
                },
                "mill": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opts": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schema.Node": {
            "type": "object",
            "properties": {
                "json_schema": {
                    "type": "object"
                },
                "links": {
                    "type": "object"
                },
                "mill": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opts": {
                    "type": "object"
                },
                "pin": {
                    "type": "boolean"
                },
                "plaintext": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
