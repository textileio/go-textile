package core

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// lsNotifications godoc
// @Summary List notifications
// @Description Lists all notifications generated by thread and account activity.
// @Tags notifications
// @Produce application/json
// @Success 200 {array} core.NotificationInfo "notifications"
// @Router /notifications [get]
func (a *api) lsNotifications(g *gin.Context) {
	list := a.node.Notifications("", -1)
	g.JSON(http.StatusOK, list)
}

// readNotifications godoc
// @Summary Mark notifiction as read
// @Description Marks a notifiction as read by ID. Use 'all' to mark all as read.
// @Tags notifications
// @Produce application/json
// @Param id path string true "notification id"
// @Success 200 {string} string "ok"
// @Failure 400 {string} string "Bad Request"
// @Router /notifications/{id}/read [post]
func (a *api) readNotifications(g *gin.Context) {
	id := g.Param("id")

	var err error
	if id == "all" {
		err = a.node.ReadAllNotifications()
	} else {
		err = a.node.ReadNotification(id)
	}
	if err != nil {
		g.String(http.StatusBadRequest, err.Error())
		return
	}

	g.JSON(http.StatusOK, "ok")
}
